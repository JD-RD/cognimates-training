{{> header }}

<ul class="stepper">

	<h1 class="stepper__header"> Vision Classifer </h1>

	<li class="stepper__step">
		<span class="stepper__number">1</span>
		<div class="step__circle">
			<i></i>
		</div>
		<div class="step__description">
			<h2 class="step__header">What is your project name?</h2>
			<div class="step__body">
				<form>
					<div class="form-group">
						{{!-- <label for="exampleInputEmail1">Name</label> --}}
						<input type="email"
							class="form-control step__form-text"
							id="exampleInputEmail1"
							aria-describedby="emailHelp"
							placeholder="Use this name in Codelab">
						{{!-- <small id="emailHelp"
							class="form-text text-muted">codelab references this</small> --}}
					</div>
				</form>
			</div>
		</div>
	</li>

	<li class="stepper__step">
		<span class="stepper__number">2</span>
		<div class="step__circle">
			<i></i>
		</div>
		<div class="step__description">
            <h2 class="step__header">What are your {{ serviceName }} keys?
                <a href="#" class="step__info-open-button " role="button">
                    <i class="fas fa-question-circle"></i>
                </a>
            </h2>

			<div class="step__body">
					<div class="form-group">
						<input type="email"
							class="form-control step__form-text"
							id=""
							aria-describedby=""
							placeholder="something like: 828gn21ng02n-gmffmn298fkskj-gsk2jg">
					</div>
                <div class="step__info 
                            step__info--keys">
                    Register for an account on {{ serviceName }}, make an API key there and 
                    copy it here. 

    				 <a href="{{ serviceUrl }}" target="_blank" >
    					   Get A key
    				 </a>

                     <div>
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/YOrrROME2zc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
			         </div>
                 </div>
            </div>
		</div>
	</li>

	<li class="stepper__step">
		<span class="stepper__number">3</span>
		<div class="step__circle">
			<i></i>
		</div>
		<div class="step__description">
			<h2 class="step__header">What categories should your model have? 
                <a href="#" class="step__info-open-button " role="button">
                    <i class="fas fa-question-circle"></i>
                </a>
            </h2>
			<p class="body_text">
                <div class="step__info step__info--categories">
    			   <span>Categories are groups of things your model wil try to tell the difference between. 
    			   Remember, it can only learn what you give it! </span>
    				<ul>
    					<li><b>animals,</b>like <span> cats vs dogs</span></li>
    					<li><b>objects</b>, like <span> cups vs jars</span></li>
    					<li><b>expressions</b>, like <span> happy vs sad</span></li>
    				</ul>
				</div>
                <div class="">
                    <form class="category__new-form-container">
                        <div class="category__new-form-group">
                            <input type="email"
                                class="form-control category__new-form step__form-text"
                                id=""
                                aria-describedby=""
                                placeholder="for example, cats">
                             <button class="category__button--create d-inline-block btn btn-primary" 
                                    type="button">
                                    Create Class
                                </button>
                            <span class="step__body-secondary"></span>
                        </div>
                    </form>
                </div>


				<div class="category__container">
					<div class="category__box">
						<form action="/file-upload"
					           class="dropzone dropzone--category">
                          <div class="category__name">
                                Cats
                            </div>

                            <div class="dropzone__header">
                                <i class="fas fa-cloud-upload-alt dropzone__upload-icon"></i>
                                <span class="dropzone__label">Drag and drop images</span>
                            </div>

                            <!-- inject image previews here -->
                            <div class="dropzone__preview-container">
                            </div>
                        </form>
					</div>

					<a href="#" class="category__button--remove btn btn-primary">
						<i class="fas fa-times"></i>
					</a>
				</div>

				
			</div>
		</div>
	</li>

	<li class="stepper__step">
		<span class="stepper__number">4</span>
		<div class="step__circle">
			<i></i>
		</div>
		<div class="step__description">
			<h2 class="step__header">Train The Model</h2>
			<div class="step__body">
				<span class="step__body-secondary">
					<button class="btn btn-primary"
						type="button"
						disabled>
						<span class="spinner-border spinner-border-sm"
							role="status"
							aria-hidden="true"></span>
						Loading...
					</button>

				</span>
			</div>
		</div>
	</li>

	<li class="stepper__step">
		<span class="stepper__number">5</span>
		<div class="step__circle">
			<i></i>
		</div>
		<div class="step__description">
			<h2 class="step__header">Now Test It Out</h2>
			<div class="step__body">

                <div class="category__container">
                    <div class="category__box">
                        <form action="/file-upload"
                          id="js-dropzone--predict"
                          class="dropzone 
                                 dropzone--predict">

                            <div class="dropzone__header">
                                <i class="fas fa-cloud-upload-alt dropzone__upload-icon"></i>
                                <span class="dropzone__label">Drag and drop images</span>
                            </div>
                        </form>
                    </div>
                </div>

				<button class="btn btn-primary"
					type="button">
					Predict
				</button>
			</div>
		</div>
	</li>

	<li class="stepper__step">
		<span class="stepper__number">6</span>
		<div class="step__circle">
			<i></i>
		</div>
		<div class="step__description">
			<h2 class="step__header">Play with the model in Codelab</h2>
			<div class="step__body">
				<button class="btn btn-primary"
					type="button">
					Go!
				</button>
			</div>
		</div>
	</li>

</ul>
{{> footer }}


<script>

    $(document).ready(function init() {

 	// "jsDropzonePredict" is the camelized version of the HTML element's ID
    Dropzone.options.jsDropzonePredict = {
      paramName: "predict", // The name that will be used to transfer the file
      maxFilesize: 5, // MB
      maxFiles: 1,
      previewsContainer: "dropzone__preview-container"
    };
    

      $('#button_apikey').click(function () {
        if ($('#input_apikey').val() == '') {
          alert('API Key cannot be empty');
          return;
        }
        window.apiKey = $('#input_apikey').val();
        // loadUserClassifiers();
      })
    });

    function loadUserClassifiers() {
      $.ajax({
           url: "/vision/classifiers",
           type: "GET",
           headers: { 'apiKey': window.apiKey },
           success: function (data) {
             if(data.error == null) {
               window.userClassifiers = data.classifiers;
             } else {
               window.userClassifiers = [];
             }
             displayClassifiers();
           },
           error: function (data) {
             console.log(data);
             window.userClassifiers = [];
           }
        });
    }

    function createClassifier() {
      if (window.labels == undefined || window.labels.length < 2) {
        alert('Two or more classes are required to train');
        return
      }
      var error = false
      for (var idx = 0, label = window.labelListItems[idx]; idx < window.labelListItems.length; idx++) {
        if (window.examples[label].length < 10) {
          alert('10 or more examples required for each label');
          error = true;
          break;
        }
      }
      if(error == true) {
        return;
      }
      var requestData = {};
      requestData.name = window.classifierName;
      requestData.training_data = [];
      window.labels.forEach((label) => {
        label_items = [];
        window.examples[label].forEach((example) => {
          var image_file = example.split(',')[1];
          label_items.push(image_file);
        })
        requestData.training_data.push({label: label, label_items: label_items});
      })
      $.ajax({
        url: '/vision/classifier',
        type: 'POST',
        dataType: 'json',
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify(requestData),
        headers: { apikey: window.apiKey },
        success: function (data) {
          if(data.error != null) {
            alert(data.error);
            return;
          }
          
        }
      });
    }

    function classifyImage() {

    }

</script>
