{{> header }}

<header class="main-header">
  <h1 id="classifierTitle"></h1>
</header>

<div class="container text-center">
  <h3 id="status"></h3><br>
  <div class="row">
    <br><br>
    <div class="col-sm-8" style="text-align: left">
      <br>
      <span id="classifierId"></span><br>
      <span id="classifierStatus"></span><br>
      <span id="classifierCreated"></span>
    </div>
    <div class="col-sm-4">
      <div class="btn btn-primary btn-sm btn-block" id="refreshClassifier">
        Refresh
      </div><br>
      <div class="btn btn-danger btn-sm btn-block" id="deleteClassifier">
        Delete
      </div>
    </div>
  </div>
  <br>
  <div class="row">
    <div class="col-sm-8">
      <br>
      <form id="predictionForm">
        <div class="form-group">
          <input class="form-control input-lg" id="predictionInput" type="file" onchange="encodeImageFileAsURL(this)" accept="image/*">
        </div>
      </form>
    </div>
    <div class="col-sm-2">
    </div>
    <div class="col-sm-2">
      <br>
      <div class="btn btn-primary btn-lg" id="predictButton">
        Predict
      </div>
    </div>
  </div>
  <br>
  <div class="row">
    <ul class="list-group" id="labelList">
    </ul>
  </div>
</div><br>

<script>
  function init() {
    if (window.localStorage.getItem('token_expiry') != 'null') {
      if (parseInt(window.localStorage.getItem('token_expiry')) < new Date().getTime()) {
        window.localStorage.setItem('access_token', null)
        window.localStorage.setItem('token_expiry', null)
        window.location.replace("/");
      } else {

        if(window.localStorage.getItem('selectedClassifier') == 'null') {
          window.location.replace("/vision_home");
          return
        }
        if(window.localStorage.getItem('vision_apiKey') == 'null') {
          window.location.replace("/vision_home");
          return
        }
        window.access_token = window.localStorage.getItem('access_token')
        window.apiKey = window.localStorage.getItem('vision_apiKey');
        loadUserClassifier(window.localStorage.getItem('selectedClassifier'));
        return
      }
    } else {
      window.location.replace("/");
      return
    }
  }

  $(document).ready(function(){
    // $('#logoutButton').click(function(evt) {
    //   evt.preventDefault();
    //   window.localStorage.setItem('access_token', null)
    //   window.localStorage.setItem('token_expiry', null)
    //   window.localStorage.setItem('vision_apiKey', null)
    //   window.location.replace("/");
    //   return false;
    // })

    $('#predictionForm').submit(function() {
      if(window.predictionImage != undefined) {
        classify();
      } else {
        alert('Choose an image to perform prediction')
        return;
      }
      return false;
    });

    $('#predictButton').click(function(evt) {
      evt.preventDefault();
      if(window.predictionImage != undefined) {
        classify();
      } else {
        alert('Choose an image to perform prediction')
        return;
      }
      return false;
    });


    $('#refreshClassifier').click(function(evt) {
      evt.preventDefault();
      loadUserClassifier(window.localStorage.getItem('selectedClassifier'));
      return false;
    });

    $('#deleteClassifier').click(function(evt) {
      evt.preventDefault();
      deleteClassifier()
      return false;
    });

    init();
  });

  function encodeImageFileAsURL(element) {
    var file = element.files[0];
    if(file == undefined) return;
    var reader = new FileReader();
    reader.onloadend = function() {
      window.predictionImage = reader.result
    }
    reader.readAsDataURL(file);
  }

  function loadUserClassifier(classifier_id) {
    $.ajax({
         url: "/vision/classifier",
         type: "GET",
         headers: { 'apikey': window.apiKey },
         data: { classifier_id: classifier_id},
         success: function (data) {
           if(data.error == null) {
             window.userClassifier = data
           } else {
             alert(data.error)
           }
           displayClassifierDetails()
         },
         error: function (data) {
           console.log(data);
           window.userClassifiers = []
         }
      });
  }

  function displayClassifierDetails() {
      if(window.userClassifier == null) {
        window.localStorage.setItem('selectedClassifier', null)
        window.location.replace('/vision_home')
        return
      }
      console.log(window.userClassifier);
      var name = window.userClassifier.name.slice(0, window.userClassifier.name.indexOf('_'))
      $('#classifierTitle').html(name)
      $('#classifierId').html(`Classifier ID: ${window.userClassifier.classifier_id}`)
      $('#classifierStatus').html(`Classifier Status: ${window.userClassifier.status}`)
      $('#classifierCreated').html(`Creation date: ${window.userClassifier.created}`)
      $("#status").html("Project status: " + window.userClassifier.status)
  }


  function deleteClassifier() {
    $.ajax({
         url: "/vision/classifier",
         type: "DELETE",
         headers: { 'apikey': window.apiKey },
         data: { classifier_id: window.userClassifier.classifier_id },
         success: function (data) {
           if(data.error == null) {
             window.location.replace('/vision_home')
           } else {
             alert(data.error)
           }
         },
         error: function (data) {
           alert(data.message)
           console.log(data);
         }
      });
  }

  function showClassification(response) {
    if(response.length == 1) {
      alert(`${response[0].class} with confidence ${response[0].score}`)
    } else {
      var classes = {}
      var scores = []
      for(var idx = 0; idx < response.length; idx++) {
        let score = response[idx].score
        let className = response[idx].class
        classes[score] = className
        scores.push(score)
      }
      scores.sort(function(a, b) {
        return b - a;
      })
      let score = scores[0]
      let className = classes[score]
      alert(`${className} with confidence ${score}`)
    }
  }

  function classify() {
    if(window.predictionImage == undefined) {
      return;
    }
    $.ajax({
         url: "/vision/classify",
         type: "POST",
         headers: { 'apikey': window.apiKey },
         data: { classifier_id: window.userClassifier.classifier_id,
         image_data: window.predictionImage },
         success: function (data) {
           if(data.error == null) {
             showClassification(data)
           } else {
             alert(data.error)
           }
         },
         error: function (data) {
           console.log(data);
           window.userClassifiers = []
         }
      });
  }
</script>
