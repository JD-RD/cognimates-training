{{> header }}

<header class="main-header">
  <h1 id="labelName"></h1>
  <h2>Add examples to your bucket. Try to add at least ten!</h2><br>
  <div class="btn btn-success btn-lg" id="goBack">
        Return to your project
   </div>
</header>
<div class="example-box">
<section class="example-insert">
    <input class="form-control input-sm" id="exampleInput" type="file" name="task" onchange="encodeImageFileAsURL(this)" accept="image/*" multiple>
</section>
</div>
<section class="example-list">
  <ul id="exampleList"></ul>
</section>

<script>
  var labelName = null;
  var app;
	(function() {
	app = {
		init: function() {
      if (window.localStorage.getItem('token_expiry') != 'null') {
        if (parseInt(window.localStorage.getItem('token_expiry')) < new Date().getTime()) {
          window.localStorage.setItem('access_token', null)
          window.localStorage.setItem('token_expiry', null)
          window.location.replace("/");
        } else {
          if(window.localStorage.getItem('temp_classifierName') == 'null') {
            window.location.replace("/text_home");
            return
          }
          window.access_token = window.localStorage.getItem('access_token')
          window.labelName = window.localStorage.getItem('temp_labelName');
          window.classifierName = window.localStorage.getItem('classifierName')
          $('#labelName').html(window.labelName)
        }
      } else {
        window.location.replace("/");
        return
      }
			// Load list
			app.storage('get');
      var color = getColor()

      $('input').attr('placeholder', 'Add your ' + window.labelName + ' examples here')

			// // Add example
			// $("#exampleInput").change(
      //   function(e) {
      //       console.log('changed')
      //       var example = e.target.parentNode.parentNode.firstChild;
      //       var exampleInput = window.currentExample
      //       console.log(exampleInput)
      //       app.addExample(exampleInput);
      //       app.storage('update');
      //
			// }, false);

			document.querySelector('.example-list').addEventListener('click', function(e) {
				// Remove label
				if ( e.target.classList.contains('remove-image') ) {
          console.log('check', e.target.parentNode.parentNode)
					app.removeExample(e.target.parentNode.parentNode);
				}
			}, false);

      document.querySelector('#goBack').addEventListener('click', function(e) {
        window.location.replace('/vision_train')
      }, false);
		},

		addExample: function (example) {
      var new_example = document.createElement('li');
        new_example.setAttribute('class', 'img-example');
        new_example.setAttribute('style', 'background-image: url(' + example + ')')
        new_example.innerHTML = '<center><a href="javascript:;" class="remove-image">remove</a></center>';
        // var exampleInput = $('#exampleInput').val()
        var label = window.labelName
        if(label == undefined) return;
        // var examples = JSON.parse(window.localStorage.getItem(classifierName+"_examples"))
        localforage.getItem(classifierName+"_examples").then((examples) => {
          if(examples == null) {
            examples = {}
          }
          if(examples[label] == undefined) {
            examples[label] = []
          }

          if(exampleInput != null && exampleInput.length > 0) {

            if(example == undefined || example.length == 0) return;
            if(label == undefined || examples[label] == undefined) return;
            if(examples[label].includes(example) == true) {
              alert('example already exists')
              return
            }
            var $list = document.querySelector('.example-list ul');
            $list.appendChild(new_example);
            examples[label].push(example)
            app.storage('update')
          }

          localforage.setItem(classifierName+'_examples', examples).then((examples) => {
            return false;
          })
      })
		},

    addExamples: function (examples) {
      var label = window.labelName;
      if(label == undefined) return;
      if (window.examples == null || window.examples == undefined) {
        window.examples = {};
      }
      if (window.examples[label] == undefined) {
        window.examples[label] = [];
      }

      var $list = document.querySelector('.example-list ul');

      if (examples != null && examples.length != null) {
        examples.forEach((example) => {
          if(window.examples[label].includes(example) == true) {
            alert('example already exists')
            return;
          }
          window.examples[label].push(example);
          var new_example = createExampleElement(example);
          $list.appendChild(new_example);
        })
      }

      function createExampleElement(example) {
          var new_example = document.createElement('li');
          new_example.setAttribute('class', 'img-example');
          new_example.setAttribute('style', 'background-image: url(' + example + ')')
          new_example.innerHTML = '<center><a href="javascript:;" class="remove-image">remove</a></center>';
          return new_example;
      }
      console.log(window.examples);
      localforage.setItem(classifierName+'_examples', window.examples).then((savedExamples) => {
        console.log(savedExamples);
        return false;
      })
		},

		removeExample: function (example) {
			example.style.opacity = 0;
			setTimeout(function() {
				example.remove();
				app.storage('update');
			}, 400);
			var ex = example.getAttribute('style', 'background-image')
      ex = ex.slice(23, -15)
      console.log("now this",ex)
      var label = window.labelName
      localforage.getItem(classifierName+'_examples').then((examples) => {
        var idx = examples[label].indexOf(ex)
        console.log("index",idx)
        if(idx > -1) {
          examples[label].splice(idx, 1)
        }
        localforage.setItem(classifierName+'_examples', examples).then((examples) => {
          console.log('set', examples[0])
        })
      })


		},

		storage: function(type) {
      var name = window.classifierName+ '_' + window.labelName + '_examples'
			if ( type === 'get' ) {
        localforage.getItem(window.classifierName + '_examples').then((examples) => {
          console.log("Loaded examples on init:");
          console.log(examples);
          if (examples != null) {
            window.examples = examples;
            if (window.examples[window.labelName] == undefined) {
              window.examples[window.labelName] = [];
            }
            loadExampleItems(window.labelName);
          } else {
            window.examples = {};
            window.examples[window.labelName] = [];
          }
        })

			} else if ( type === 'update' ) {
				var str = document.querySelector('.example-list').innerHTML;
        localforage.setItem(name + "_html", str).then((value) => {
        })
			}
		}
	};

	app.init();
  
})()

  function loadExampleItems (label) {
    clearExampleItems()
    if(window.examples == undefined) return;
    if(window.examples[label] == undefined) return;
    window.examples[label].forEach((example) => {
      addExampleItem(example)
    })
  }

  function clearExampleItems() {
    var $list = document.querySelector('.example-list ul');
    $("#exampleList").empty();
  }

  function addExampleItem(example) {
    var $list = document.querySelector('.example-list ul');
    var new_example = createExampleElement(example);
    $list.appendChild(new_example);
  }

  function createExampleElement(example) {
      var new_example = document.createElement('li');
      new_example.setAttribute('class', 'img-example');
      new_example.setAttribute('style', 'background-image: url(' + example + ')')
      new_example.innerHTML = '<center><a href="javascript:;" class="remove-image">remove</a></center>';
      return new_example;
  }

  function encodeImageFileAsURL(element) {
    if(element.files.length == 1) {
      var file = element.files[0];
      if(file == undefined) return;
      var reader = new FileReader();
      reader.onloadend = function() {
        app.addExample(reader.result)
        app.storage('update')
      }
      reader.readAsDataURL(file);
    } else if(element.files.length > 1) {
      console.log(element.files.length);
      var promises = [];
      Array.from(element.files).forEach((file) => {
        if(file == undefined) return;
        var promise = new Promise((resolve, reject) => {
          var reader = new FileReader();
          reader.onloadend = function() {
            resolve(reader.result);
          }
          reader.readAsDataURL(file);
        });
        promises.push(promise);
      });
      Promise.all(promises)
      .then((result) => {
        app.addExamples(result);
      })
      .catch((e) => {
        console.log(e);
      })
    }
  }

  function getColor() {
    var label = window.localStorage.getItem('temp_labelName')
    var color = window.localStorage.getItem(label+"_color")
    return color
  }
</script>
